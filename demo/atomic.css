.Bdrs\(5px\) {
  border-radius: 5px;
}
.Bgc\(\#444\) {
  background-color: #444;
}
.C\(\#fff\) {
  color: #fff;
}
.D\(g\) {
  display: grid;
}
.Fz\(150\%\) {
  font-size: 150%;
}
.M\(40px\) {
  margin: 40px;
}
.P\(20px\) {
  padding: 20px;
}
.Gcg\(10px\) {
  grid-column-gap: 10px;
}
.Grg\(10px\) {
  grid-row-gap: 10px;
}
.Gg\(10px\) {
  grid-gap: 10px;
}
.Gg\(10px\,20px\) {
  grid-gap: 10px 20px;
}
.Gtc\(100px\,100px\,100px\) {
  grid-template-columns: 100px 100px 100px;
}
.Gtc\(_col1-start_\,100px\,_col2-start_\,100px\,_col3-start_\,100px\,_col3-end_\) {
  grid-template-columns: [col1-start] 100px [col2-start] 100px [col3-start] 100px [col3-end];
}
.Gtc\(_col_\,100px\,_col_\,100px\,_col_\,100px\,_col_\,100px\) {
  grid-template-columns: [col] 100px [col] 100px [col] 100px [col] 100px;
}
.Gtr\(_row1-start_\,a\,_row2-start_\,a\,_row2-end_\) {
  grid-template-rows: [row1-start] auto [row2-start] auto [row2-end];
}
.Gtr\(_row_\,a\,_row_\,a\,_row_\) {
  grid-template-rows: [row] auto [row] auto [row];
}
.Gcs\(1\) {
  grid-column-start: 1;
}
.Gcs\(2\) {
  grid-column-start: 2;
}
.Gcs\(3\) {
  grid-column-start: 3;
}
.Gcs\(col\) {
  grid-column-start: col;
}
.Gcs\(col1-start\) {
  grid-column-start: col1-start;
}
.Gcs\(col2-start\) {
  grid-column-start: col2-start;
}
.Gcs\(col3-start\) {
  grid-column-start: col3-start;
}
.Gce\(2\) {
  grid-column-end: 2;
}
.Gce\(3\) {
  grid-column-end: 3;
}
.Gce\(4\) {
  grid-column-end: 4;
}
.Grs\(1\) {
  grid-row-start: 1;
}
.Grs\(2\) {
  grid-row-start: 2;
}
.Grs\(row\) {
  grid-row-start: row;
}
.Grs\(row1-start\) {
  grid-row-start: row1-start;
}
.Grs\(row2-start\) {
  grid-row-start: row2-start;
}
.Grs\(row_2\) {
  grid-row-start: row 2;
}
.Grs\(row_3\) {
  grid-row-start: row 3;
}
.Gre\(2\) {
  grid-row-end: 2;
}
.Gre\(3\) {
  grid-row-end: 3;
}
.Gc\(1\,2\) {
  grid-column: 1 / 2;
}
.Gc\(1\,3\) {
  grid-column: 1 / 3;
}
.Gc\(1\,span_2\) {
  grid-column: 1 / span 2;
}
.Gc\(2\,3\) {
  grid-column: 2 / 3;
}
.Gc\(3\,4\) {
  grid-column: 3 / 4;
}
.Gc\(col\,span_2\) {
  grid-column: col / span 2;
}
.Gc\(col\,span_4\) {
  grid-column: col / span 4;
}
.Gc\(col1-start\,col3-start\) {
  grid-column: col1-start / col3-start;
}
.Gc\(col_2\,span_3\) {
  grid-column: col 2 / span 3;
}
.Gc\(col_3\,span_2\) {
  grid-column: col 3 / span 2;
}
.Gr\(1\,2\) {
  grid-row: 1 / 2;
}
.Gr\(1\,3\) {
  grid-row: 1 / 3;
}
.Gr\(1\,span_2\) {
  grid-row: 1 / span 2;
}
.Gr\(2\,3\) {
  grid-row: 2 / 3;
}
.Gr\(row1-start\,row2-end\) {
  grid-row: row1-start / row2-end;
}
.Ga\(1\,1\,2\,2\) {
  grid-area: 1 / 1 / 2 / 2;
}
.Ga\(1\,2\,2\,3\) {
  grid-area: 1 / 2 / 2 / 3;
}
.Ga\(1\,3\,2\,4\) {
  grid-area: 1 / 3 / 2 / 4;
}
.Ga\(2\,1\,3\,2\) {
  grid-area: 2 / 1 / 3 / 2;
}
.Ga\(2\,2\,3\,3\) {
  grid-area: 2 / 2 / 3 / 3;
}
.Ga\(2\,3\,3\,4\) {
  grid-area: 2 / 3 / 3 / 4;
}
